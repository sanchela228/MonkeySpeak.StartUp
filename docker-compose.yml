version: '3.8'

services:
  webservice:
    build:
      args:
        - REMOTE_GIT_LINK_BACKEND=${REMOTE_GIT_LINK_BACKEND}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - ASPNETCORE_URLS=http://+:80
        - ASPNETCORE_Kestrel__Certificates__Default__Password=${SSL_CERTIFICATE_PASS}
        - ConnectionStrings__DefaultConnection=Host=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      context: .
      dockerfile: ./docker/webservice/Dockerfile
    ports:
      - "${HTTP_PORT_SERVER}:80"
      - "${HTTPS_PORT_SERVER}:443"
    volumes:
      - .:/src
      - ~/.nuget:/root/.nuget
    environment:
      - REMOTE_GIT_LINK_BACKEND=${REMOTE_GIT_LINK_BACKEND}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${SSL_CERTIFICATE_PASS}
      - ConnectionStrings__DefaultConnection=Host=${POSTGRES_SERVER};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - network2

  db:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    networks:
      - network2

volumes:
  postgres_data:

networks:
    network2:
        name: "network2"